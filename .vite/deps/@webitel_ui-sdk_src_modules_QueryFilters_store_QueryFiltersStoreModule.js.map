{
  "version": 3,
  "sources": ["../../node_modules/@webitel/ui-sdk/src/modules/QueryFilters/store/QueryFiltersStoreModule.js"],
  "sourcesContent": ["import isEmpty from '../../../scripts/isEmpty.js';\nimport BaseStoreModule from '../../../store/BaseStoreModules/BaseStoreModule.js';\n\nexport default class QueryFiltersStoreModule extends BaseStoreModule {\n  getters = {\n    GET_FILTERS: (state, getters) =>\n      Object.keys(state).reduce((filters, filterKey) => {\n        const filterValue = getters.GET_FILTER(filterKey);\n        return isEmpty(filterValue)\n          ? filters\n          : {\n              ...filters,\n              [filterKey]: filterValue,\n            };\n      }, {}),\n    GET_FILTER: (state) => (filter) => {\n      const { value, storedProp, multiple } = state[filter];\n      if (multiple) return value.map((item) => item[storedProp]); // if arr, map\n      if (storedProp) return value[storedProp]; // if object and has specific prop, return this prop\n      return value; // else return val\n    },\n  };\n\n  actions = {\n    SET_FILTER: (context, { filter, value }) => {\n      const { multiple, defaultValue } = context.state[filter];\n      let newValue = value;\n      if (newValue) {\n        if (multiple && !Array.isArray(newValue)) newValue = [newValue];\n      } else if (newValue === null || newValue === undefined)\n        newValue = defaultValue;\n      context.commit('SET_FILTER', { filter, value: newValue });\n    },\n    RESET_FILTERS: (context, payload) => {\n      context.commit('RESET_FILTERS', payload);\n    },\n  };\n\n  mutations = {\n    SET_FILTER: (state, { filter, value }) => {\n      state[filter].value = value;\n    },\n    RESET_FILTERS: (state, payload = {}) => {\n      const { excludeKeys = [] } = payload;\n\n      Object.keys(state).forEach((filter) => {\n        if (!excludeKeys.includes(filter)) {\n          state[filter].value = state[filter].defaultValue;\n        }\n      });\n    },\n  };\n\n  /* FIXME REMOVE COMPLETELY AND USE GET_MODULE() INSERTION*/\n  constructor({ state = {}, getters = {}, actions = {}, mutations = {} } = {}) {\n    super();\n    this.state = { ...this.state, ...state };\n    this.getters = { ...this.getters, ...getters };\n    this.actions = { ...this.actions, ...actions };\n    this.mutations = { ...this.mutations, ...mutations };\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA,IAAAA,eAAA;AAAA,IAAAA,eAAA;AAGA,IAAqB,0BAArB,cAAqD,gBAAgB;AAAA;AAAA,EAmDnE,YAAY,EAAE,QAAQ,CAAC,GAAG,UAAU,CAAC,GAAG,UAAU,CAAC,GAAG,YAAY,CAAC,EAAE,IAAI,CAAC,GAAG;AAC3E,UAAM;AAnDR,mCAAU;AAAA,MACR,aAAa,CAAC,OAAO,YACnB,OAAO,KAAK,KAAK,EAAE,OAAO,CAAC,SAAS,cAAc;AAChD,cAAM,cAAc,QAAQ,WAAW,SAAS;AAChD,eAAO,gBAAQ,WAAW,IACtB,UACA;AAAA,UACE,GAAG;AAAA,UACH,CAAC,SAAS,GAAG;AAAA,QACf;AAAA,MACN,GAAG,CAAC,CAAC;AAAA,MACP,YAAY,CAAC,UAAU,CAAC,WAAW;AACjC,cAAM,EAAE,OAAO,YAAY,SAAS,IAAI,MAAM,MAAM;AACpD,YAAI,SAAU,QAAO,MAAM,IAAI,CAAC,SAAS,KAAK,UAAU,CAAC;AACzD,YAAI,WAAY,QAAO,MAAM,UAAU;AACvC,eAAO;AAAA,MACT;AAAA,IACF;AAEA,mCAAU;AAAA,MACR,YAAY,CAAC,SAAS,EAAE,QAAQ,MAAM,MAAM;AAC1C,cAAM,EAAE,UAAU,aAAa,IAAI,QAAQ,MAAM,MAAM;AACvD,YAAI,WAAW;AACf,YAAI,UAAU;AACZ,cAAI,YAAY,CAAC,MAAM,QAAQ,QAAQ,EAAG,YAAW,CAAC,QAAQ;AAAA,QAChE,WAAW,aAAa,QAAQ,aAAa;AAC3C,qBAAW;AACb,gBAAQ,OAAO,cAAc,EAAE,QAAQ,OAAO,SAAS,CAAC;AAAA,MAC1D;AAAA,MACA,eAAe,CAAC,SAAS,YAAY;AACnC,gBAAQ,OAAO,iBAAiB,OAAO;AAAA,MACzC;AAAA,IACF;AAEA,qCAAY;AAAA,MACV,YAAY,CAAC,OAAO,EAAE,QAAQ,MAAM,MAAM;AACxC,cAAM,MAAM,EAAE,QAAQ;AAAA,MACxB;AAAA,MACA,eAAe,CAAC,OAAO,UAAU,CAAC,MAAM;AACtC,cAAM,EAAE,cAAc,CAAC,EAAE,IAAI;AAE7B,eAAO,KAAK,KAAK,EAAE,QAAQ,CAAC,WAAW;AACrC,cAAI,CAAC,YAAY,SAAS,MAAM,GAAG;AACjC,kBAAM,MAAM,EAAE,QAAQ,MAAM,MAAM,EAAE;AAAA,UACtC;AAAA,QACF,CAAC;AAAA,MACH;AAAA,IACF;AAKE,SAAK,QAAQ,EAAE,GAAG,KAAK,OAAO,GAAG,MAAM;AACvC,SAAK,UAAU,EAAE,GAAG,KAAK,SAAS,GAAG,QAAQ;AAC7C,SAAK,UAAU,EAAE,GAAG,KAAK,SAAS,GAAG,QAAQ;AAC7C,SAAK,YAAY,EAAE,GAAG,KAAK,WAAW,GAAG,UAAU;AAAA,EACrD;AACF;",
  "names": ["import_dist"]
}
