{
  "version": 3,
  "sources": ["../../node_modules/@webitel/ui-sdk/src/modules/Userinfo/store/UserinfoStoreModule.js", "../../node_modules/@webitel/ui-sdk/src/modules/Userinfo/api/userinfo.js", "../../node_modules/@webitel/ui-sdk/src/modules/Userinfo/v2/api/UserinfoAPI.ts", "../../node_modules/@webitel/ui-sdk/src/modules/Userinfo/enums/Permissions.enum.js"],
  "sourcesContent": ["import BaseStoreModule from '../../../store/BaseStoreModules/BaseStoreModule.js';\nimport userinfoGenerator from '../api/userinfo.js';\nimport ApplicationsAccess from '../classes/ApplicationsAccess.js';\nimport Permissions from '../enums/Permissions.enum.js';\n\nlet userinfo = null;\n\nconst defaultState = () => ({\n  isLoading: true,\n  domainId: 0,\n  name: '',\n  username: '',\n  account: '',\n  preferredUsername: '',\n  userId: 0,\n  scope: {},\n  permissions: {},\n  roles: [],\n  license: [],\n  access: {},\n  language: localStorage.getItem('lang'),\n});\n\nexport default class UserinfoStoreModule extends BaseStoreModule {\n  state = {\n    ...defaultState(),\n  };\n\n  getters = {\n    THIS_APP: (state) => state.thisApp,\n    // if no access[app] => accessed by default\n    CHECK_APP_ACCESS: (state) => (app) =>\n      !state.access[app] || state.access[app]?._enabled,\n    CHECK_OBJECT_ACCESS:\n      (state, getters) =>\n      ({ name, route }) => {\n        if (\n          !state.access[getters.THIS_APP] ||\n          !state.access[getters.THIS_APP]._enabled\n        )\n          return false;\n        if (route) return getters.CHECK_OBJECT_ACCESS_BY_ROUTE(route);\n        return getters.CHECK_OBJECT_ACCESS_BY_NAME(name);\n      },\n    CHECK_OBJECT_ACCESS_BY_NAME: (state, getters) => (name) =>\n      state.access[getters.THIS_APP][name]?._enabled,\n    CHECK_OBJECT_ACCESS_BY_ROUTE: (state, getters) => (route) => {\n      const accessKey = Object.keys(state.access[getters.THIS_APP]).find(\n        (object) => route.name.includes(object),\n      );\n      return state.access[getters.THIS_APP][accessKey]?._enabled;\n    },\n    GET_OBJECT_SCOPE:\n      (state, getters) =>\n      ({ name, route }) => {\n        if (route) return getters.GET_OBJECT_SCOPE_BY_ROUTE(route);\n        return getters.GET_OBJECT_SCOPE_BY_NAME(name);\n      },\n    GET_OBJECT_SCOPE_BY_NAME: (state) => (name) =>\n      Object.values(state.scope).find((object) => name === object.name),\n    GET_OBJECT_SCOPE_BY_ROUTE: (state) => (route) =>\n      Object.values(state.scope).find((object) =>\n        route.name.includes(object.route),\n      ),\n    HAS_READ_ACCESS: (state, getters) => (checkedObject) => {\n      if (!getters.CHECK_OBJECT_ACCESS(checkedObject)) return false;\n      if (state.permissions[Permissions.READ]) return true;\n      const objectScope = getters.GET_OBJECT_SCOPE(checkedObject);\n      return objectScope?.access?.includes('r');\n    },\n    HAS_CREATE_ACCESS: (state, getters) => (checkedObject) => {\n      if (state.permissions[Permissions.CREATE]) return true;\n      const objectScope = getters.GET_OBJECT_SCOPE(checkedObject);\n      return objectScope?.access?.includes('x');\n    },\n    HAS_EDIT_ACCESS: (state, getters) => (checkedObject) => {\n      if (state.permissions[Permissions.EDIT]) return true;\n      const objectScope = getters.GET_OBJECT_SCOPE(checkedObject);\n      return objectScope?.access?.includes('w');\n    },\n    HAS_DELETE_ACCESS: (state, getters) => (checkedObject) => {\n      if (state.permissions[Permissions.DELETE]) return true;\n      const objectScope = getters.GET_OBJECT_SCOPE(checkedObject);\n      return objectScope?.access?.includes('d');\n    },\n  };\n\n  actions = {\n    BEFORE_OPEN_SESSION_HOOK: () => {},\n    AFTER_OPEN_SESSION_HOOK: () => {},\n    CONVERT_USER_SCOPE: (context, scope) => scope,\n    CONVERT_USER_PERMISSIONS: (context, initialPermissions) => {\n      let permissions = {};\n      if (!initialPermissions) return permissions;\n      permissions = initialPermissions.reduce(\n        (permissions, currentPermission) => ({\n          ...permissions,\n          [currentPermission.id]: currentPermission,\n        }),\n        {},\n      );\n      return permissions;\n    },\n\n    OPEN_SESSION: async (context, { instance }) => {\n      userinfo = userinfoGenerator(instance);\n\n      await context.dispatch('BEFORE_OPEN_SESSION_HOOK');\n\n      const HOUR_LENGTH = 60 * 60 * 1000;\n\n      const session = await userinfo.getSession();\n\n      if (session.expiresAt - Date.now() < HOUR_LENGTH) {\n        await context.dispatch('LOGOUT');\n        throw new Error(`Session expires soon ${session.expiresAt}`);\n      }\n\n      await context.dispatch('SET_SESSION', session);\n      const access = await userinfo.getUiVisibilityAccess();\n      await context.dispatch(\n        'SET_APPLICATIONS_ACCESS',\n        new ApplicationsAccess({ access }).getAccess(),\n      );\n      await context.dispatch('AFTER_OPEN_SESSION_HOOK');\n    },\n    SET_SESSION: async (context, _session) => {\n      const defaultSession = {\n        domainId: 0,\n        username: '',\n        userId: 0,\n        scope: [],\n        roles: [],\n        license: [],\n      };\n\n      try {\n        await context.dispatch('RESET_STATE');\n        const session = { ...defaultSession, ..._session };\n        const scope = await context.dispatch(\n          'CONVERT_USER_SCOPE',\n          session.scope,\n        );\n        const permissions = await context.dispatch(\n          'CONVERT_USER_PERMISSIONS',\n          session.permissions,\n        );\n        context.commit('SET_SESSION', { ...session, scope, permissions });\n        await context.dispatch('SET_LOADING', false);\n      } catch (err) {\n        throw err;\n      }\n    },\n\n    LOGOUT: async (\n      context,\n      { authUrl = import.meta.env.VITE_AUTH_URL } = {},\n    ) => {\n      if (!authUrl) throw new Error('No authUrl for LOGOUT provided');\n      await userinfo.logout();\n      window.location.href = authUrl;\n    },\n\n    SET_APPLICATIONS_ACCESS: (context, access) =>\n      context.commit('SET_APPLICATIONS_ACCESS', access),\n\n    SET_LOADING: (context, isLoading) => {\n      context.commit('SET_LOADING', isLoading);\n    },\n\n    RESET_STATE: (context) => {\n      context.commit('RESET_STATE');\n    },\n  };\n\n  mutations = {\n    SET_SESSION: (state, session) => {\n      Object.assign(state, session);\n    },\n\n    SET_APPLICATIONS_ACCESS: (state, access) => {\n      state.access = access;\n    },\n\n    SET_LOADING: (state, isLoading) => {\n      state.isLoading = isLoading;\n    },\n\n    RESET_STATE: (state) => {\n      Object.assign(state, defaultState());\n    },\n  };\n}\n", "import {\n  getSession,\n  getUiVisibilityAccess,\n  logout,\n  setInstance,\n} from '../v2/api/UserinfoAPI';\n\n/**\n * @deprecated remove after v25.06 release\n * @description\n * backward compat\n * */\nconst userinfo = (instance) => {\n  if (instance) {\n    setInstance(instance);\n  }\n\n  return {\n    getSession,\n    logout,\n    getUiVisibilityAccess,\n  };\n};\n\nexport default userinfo;\n", "import { getDefaultInstance } from '@webitel/api-services/api/defaults';\nimport {\n  applyTransform,\n  merge,\n  notify,\n  snakeToCamel,\n} from '@webitel/api-services/api/transformers';\nimport type { AxiosInstance } from 'axios';\n\nimport type {\n  GlobalAccessApiResponseItem,\n  ScopeAccessApiResponseItem,\n  VisibilityAccess,\n} from '../types/UserAccess';\n\nlet instance = getDefaultInstance();\n\nconst setInstance = (newInstance: AxiosInstance) => {\n  instance = newInstance;\n};\n\nconst getSession = async (): Promise<{\n  scope: ScopeAccessApiResponseItem[];\n  permissions: GlobalAccessApiResponseItem[];\n  userId: string;\n}> => {\n  const url = '/userinfo';\n  try {\n    const defaultObject = () => ({\n      scope: [],\n      permissions: [],\n    });\n\n    const response = await instance.get(url);\n    return applyTransform(response.data, [\n      merge(defaultObject()),\n      snakeToCamel(),\n    ]);\n  } catch (err) {\n    throw applyTransform(err, [notify]);\n  }\n};\n\nconst getUiVisibilityAccess = async (): Promise<VisibilityAccess> => {\n  const url = 'role/metadata/access';\n  try {\n    const response = await instance.get(url);\n    return applyTransform(response.data, [snakeToCamel()]);\n  } catch (err) {\n    throw applyTransform(err, [notify]);\n  }\n};\n\nconst logout = async () => {\n  const url = '/logout';\n  try {\n    return await instance.post(url, {});\n  } catch (err) {\n    throw applyTransform(err, [notify]);\n  }\n};\n\nexport { getSession, getUiVisibilityAccess, logout, setInstance };\n", "export default Object.freeze({\n  CREATE: 'add',\n  READ: 'read',\n  EDIT: 'write',\n  DELETE: 'delete',\n  PLAYBACK_RECORD_FILE: 'playbackRecordFile',\n});\n"],
  "mappings": "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",
  "names": ["import_dist", "import_dist", "import_dist", "instance", "import_dist", "userinfo", "permissions", "instance"]
}
