{
  "version": 3,
  "sources": ["../../node_modules/@webitel/ui-sdk/src/modules/TableComponentModule/composables/useTableEmpty.js"],
  "sourcesContent": ["import deepmerge from 'deepmerge';\nimport { computed, inject } from 'vue';\nimport { useI18n } from 'vue-i18n';\nimport { useStore } from 'vuex';\n\nimport { EmptyCause } from '../../../enums/index';\nimport { isEmpty } from '../../../scripts/index.js';\nimport EmptyFiltersDark from '../_internals/assets/empty-filters-dark.svg';\nimport EmptyFiltersLight from '../_internals/assets/empty-filters-light.svg';\nimport EmptyTableDark from '../_internals/assets/empty-table-dark.svg';\nimport EmptyTableLight from '../_internals/assets/empty-table-light.svg';\n\nexport const useTableEmpty = (\n  { dataList, filters, error, isLoading },\n  overrides = {},\n) => {\n  const store = useStore();\n  const { t } = useI18n();\n\n  // use computed, so that at locale change, texts will be updated too\n  const defaults = computed(() => ({\n    image: {\n      filters: {\n        dark: EmptyFiltersDark,\n        light: EmptyFiltersLight,\n      },\n      error: {\n        dark: EmptyTableDark,\n        light: EmptyTableLight,\n      },\n      empty: {\n        dark: EmptyTableDark,\n        light: EmptyTableLight,\n      },\n    },\n    headline: {\n      filters: '',\n      error: '',\n      empty: '',\n    },\n    title: {\n      filters: '',\n      error: '',\n      empty: '',\n    },\n    text: {\n      filters: t('webitelUI.empty.text.filters'),\n      error: '',\n      empty: t('webitelUI.empty.text.empty'),\n    },\n    primaryActionText: {\n      filters: '',\n      error: '',\n      empty: t('reusable.add'),\n    },\n    secondaryActionText: {\n      filters: '',\n      error: '',\n      empty: '',\n    },\n  }));\n\n  const merged = computed(() => deepmerge(defaults.value, overrides));\n\n  let darkMode = computed(() => false);\n\n  try {\n    darkMode = inject('darkMode');\n  } catch {\n    try {\n      darkMode = computed(() => store.getters['appearance/DARK_MODE']);\n    } catch {\n      console.warn('\"darkMode\" value not found, using \"false\" as default');\n    }\n  }\n\n  const emptyState = computed(() => {\n    return !isLoading?.value && !error?.value && !dataList?.value?.length;\n  });\n\n  const emptyCause = computed(() => {\n    if (!emptyState?.value) return null;\n\n    if (error.value) return EmptyCause.ERROR;\n    if (filters?.value) {\n      const uncheckedFilters = ['page', 'size', 'sort', 'fields'];\n      const filtersApplied = Object.entries(filters.value).some(\n        ([filterName, filterValue]) =>\n          !isEmpty(filterValue) && !uncheckedFilters.includes(filterName),\n      );\n      if (filtersApplied) return EmptyCause.FILTERS;\n    }\n\n    return EmptyCause.EMPTY;\n  });\n\n  const image = computed(() => {\n    switch (emptyCause.value) {\n      case EmptyCause.ERROR:\n        return darkMode?.value\n          ? merged.value.image.error.dark\n          : merged.value.image.error.light;\n      case EmptyCause.FILTERS:\n        return darkMode?.value\n          ? merged.value.image.filters.dark\n          : merged.value.image.filters.light;\n      case EmptyCause.EMPTY:\n        return darkMode?.value\n          ? merged.value.image.empty.dark\n          : merged.value.image.empty.light;\n      default:\n        return null;\n    }\n  });\n  const headline = computed(() => {\n    switch (emptyCause.value) {\n      case EmptyCause.ERROR:\n        return merged.value.headline.error;\n      case EmptyCause.FILTERS:\n        return merged.value.headline.filters;\n      case EmptyCause.EMPTY:\n        return merged.value.headline.empty;\n      default:\n        return null;\n    }\n  });\n\n  const title = computed(() => {\n    switch (emptyCause.value) {\n      case EmptyCause.ERROR:\n        return merged.value.title.error;\n      case EmptyCause.FILTERS:\n        return merged.value.title.filters;\n      case EmptyCause.EMPTY:\n        return merged.value.title.empty;\n      default:\n        return null;\n    }\n  });\n\n  const text = computed(() => {\n    switch (emptyCause.value) {\n      case EmptyCause.ERROR:\n        return merged.value.text.error;\n      case EmptyCause.FILTERS:\n        return merged.value.text.filters;\n      case EmptyCause.EMPTY:\n        return merged.value.text.empty;\n      default:\n        return null;\n    }\n  });\n\n  const primaryActionText = computed(() => {\n    switch (emptyCause.value) {\n      case EmptyCause.ERROR:\n        return merged.value.primaryActionText.error;\n      case EmptyCause.FILTERS:\n        return merged.value.primaryActionText.filters;\n      case EmptyCause.EMPTY:\n        return merged.value.primaryActionText.empty;\n      default:\n        return null;\n    }\n  });\n\n  const secondaryActionText = computed(() => {\n    switch (emptyCause.value) {\n      case EmptyCause.ERROR:\n        return merged.value.secondaryActionText.error;\n      case EmptyCause.FILTERS:\n        return merged.value.secondaryActionText.filters;\n      case EmptyCause.EMPTY:\n        return merged.value.secondaryActionText.empty;\n      default:\n        return null;\n    }\n  });\n\n  return {\n    showEmpty: emptyState,\n    emptyCause,\n\n    image,\n    headline,\n    title,\n    text,\n    primaryActionText,\n    secondaryActionText,\n  };\n};\n"],
  "mappings": "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",
  "names": ["import_dist", "deepmerge"]
}
